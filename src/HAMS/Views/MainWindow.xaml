<Window x:Class="HAMS.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HAMS.Views" 
        xmlns:interaction="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ctl="clr-namespace:HAMS.Frame.Kernel.Controls;assembly=HAMS.Frame.Kernel"
        FontFamily="{md:MaterialDesignFont}"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Style="{DynamicResource MaterialDesignWindow}" 
        WindowStyle="None" 
        WindowState="Maximized" 
        ResizeMode="NoResize"
        MaxHeight="{Binding MainWindowModel.WorkAreaHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        MaxWidth="{Binding MainWindowModel.WorkAreaWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="68" CornerRadius="0" GlassFrameThickness="0" UseAeroCaptionButtons="False" NonClientFrameEdges="None"/>
    </WindowChrome.WindowChrome>

    <md:DialogHost Identifier="MainDialog"
                               DialogTheme="Inherit">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ContentControl Grid.Row="0"
                        prism:RegionManager.RegionName="MainHeaderRegion"/>

            <md:DrawerHost Grid.Row="1"
                                       IsLeftDrawerOpen="{Binding MainWindowModel.IsLeftDrawerOpen,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DrawerClosing">
                        <i:InvokeCommandAction Command="{Binding DrawerHostClosedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                    
                <md:DrawerHost.LeftDrawerContent>
                    <ContentControl prism:RegionManager.RegionName="MainLeftDrawerRegion"/>
                </md:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <TabControl DockPanel.Dock="Top"
                    Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
                    BorderThickness="0"
                    BorderBrush="Transparent"
                    TabStripPlacement="Top"
                    md:ColorZoneAssist.Mode="Standard"
                    SnapsToDevicePixels="True"
                    prism:RegionManager.RegionManager="{Binding MainWindowModel.RegionManager}"
                    prism:RegionManager.RegionName="MainContentRegion">
                        <TabControl.ItemContainerStyle>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Header" Value="{Binding DataContext.MenuItemName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <DockPanel>
                                                <TextBlock DockPanel.Dock="Left"
                                                       Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                                                       Text="{Binding}"
                                                       VerticalAlignment="Center"/>
                                                <Button DockPanel.Dock="Right"
                                                    Style="{DynamicResource MaterialDesignToolButton}" 
                                                    Content="{md:PackIcon Kind=Close}">
                                                    <interaction:Interaction.Triggers>
                                                        <interaction:EventTrigger EventName="Click">
                                                            <ctl:CloseTabItemAction/>
                                                        </interaction:EventTrigger>
                                                    </interaction:Interaction.Triggers>
                                                </Button>
                                            </DockPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.ItemContainerStyle>
                    </TabControl>

                    <md:Snackbar DockPanel.Dock="Bottom"
                                         MessageQueue="{Binding MainWindowModel.MessageQueue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
            </md:DrawerHost>
        </Grid>
    </md:DialogHost>
</Window>
