<UserControl x:Class="HQMS.Extension.Control.Main.Views.DataMappingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:HQMS.Extension.Control.Main.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Orientation="Horizontal">
            <TextBlock Text="字典目录"
                       Style="{DynamicResource MaterialDesignTextBlock}"/>
            <ComboBox md:HintAssist.Hint="请选择类别"
                      Margin="16 0 0 0"
                      ItemsSource="{Binding DataMappingModel.Catalogs, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="CatalogName"
                      SelectedValue="{Binding DataMappingModel.CurrentCatalog, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CatalogChangedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <Button Margin="16 0 0 0"
                    Style="{DynamicResource MaterialDesignOutlinedLightButton}"
                    Content="匹配"
                    Command="{Binding MatchCommand}"/>

            <Button Margin="16 0 0 0"
                    Style="{DynamicResource MaterialDesignOutlinedLightButton}"
                    Content="取消匹配"
                    Command="{Binding CancelMatchCommand}"/>
        </StackPanel>

        <GroupBox Grid.Row="1"
                  Grid.Column="0"
                  Header="数据表(本地)"
                  Style="{DynamicResource MaterialDesignGroupBox}">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal">
                    <TextBox Style="{DynamicResource MaterialDesignTextBox}"
                             Width="150"/>
                    <Button Margin="16 0 0 0"
                        Style="{DynamicResource MaterialDesignPaperLightButton}"
                        Content="过滤"/>
                </StackPanel>

                <DataGrid DockPanel.Dock="Top"
                          Margin="0 8 0 0"
                          ItemsSource="{Binding DataMappingModel.Locals, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding DataMappingModel.CurrentLocal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource MaterialDesignDataGrid}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          HeadersVisibility="All"
                          VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CatalogCode}"
                                            Header="类型代码"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding CatalogName}"
                                            Header="类型名称"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding LocalCode}"
                                            Header="代码"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding LocalName}"
                                            Header="名称"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>

        <GroupBox Grid.Row="1"
                  Grid.Column="1"
                  Header="数据表(标准)"
                  Style="{DynamicResource MaterialDesignGroupBox}">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top"
                            Orientation="Horizontal">
                    <TextBox Style="{DynamicResource MaterialDesignTextBox}"
                             Width="150"/>
                    <Button Margin="16 0 0 0"
                        Style="{DynamicResource MaterialDesignPaperLightButton}"
                        Content="过滤"/>
                </StackPanel>

                <DataGrid DockPanel.Dock="Top"
                          Margin="0 8 0 0"
                          ItemsSource="{Binding DataMappingModel.Standards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding DataMappingModel.CurrentStandard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource MaterialDesignDataGrid}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          HeadersVisibility="All"
                          VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CatalogCode}"
                                            Header="类型代码"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding CatalogName}"
                                            Header="类型名称"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding StandardCode}"
                                            Header="代码"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding StandardName}"
                                            Header="名称"
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>

        <GroupBox Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Header="已匹配数据表"
                  Style="{DynamicResource MaterialDesignGroupBox}">
            <DockPanel>
                <StackPanel  DockPanel.Dock="Top"
                             Orientation="Horizontal">
                    <TextBox Style="{DynamicResource MaterialDesignTextBox}"
                             Width="150"/>
                    <Button Margin="16 0 0 0"
                        Style="{DynamicResource MaterialDesignPaperLightButton}"
                        Content="过滤"/>
                </StackPanel>

                <DataGrid DockPanel.Dock="Top"
                          Margin="0 8 0 0"
                          ItemsSource="{Binding DataMappingModel.Matcheds, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding DataMappingModel.CurrentMatched, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource MaterialDesignDataGrid}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          HeadersVisibility="All"
                          VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CatalogCode}"
                                        Header="类型代码"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding CatalogName}"
                                        Header="类型名称"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding LocalCode}"
                                        Header="代码(本地)"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding LocalName}"
                                            Header="名称(本地)"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding StandardCode}"
                                        Header="代码(标准)"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                        <DataGridTextColumn Binding="{Binding StandardName}"
                                        Header="名称(标准)"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
    </Grid>
</UserControl>
